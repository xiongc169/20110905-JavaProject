package com.yoong.mybatis.api.wong_user.dao;

import com.yoong.mybatis.api.wong_user.domain.Account;
import com.yoong.mybatis.api.wong_user.domain.AccountExample;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface AccountMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account
     *
     * @mbggenerated Wed Jan 16 16:41:00 CST 2019
     */
    int countByExample(AccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account
     *
     * @mbggenerated Wed Jan 16 16:41:00 CST 2019
     */
    int deleteByExample(AccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account
     *
     * @mbggenerated Wed Jan 16 16:41:00 CST 2019
     */
    int insert(Account record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account
     *
     * @mbggenerated Wed Jan 16 16:41:00 CST 2019
     */
    int insertSelective(Account record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account
     *
     * @mbggenerated Wed Jan 16 16:41:00 CST 2019
     */
    List<Account> selectByExample(AccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account
     *
     * @mbggenerated Wed Jan 16 16:41:00 CST 2019
     */
    int updateByExampleSelective(@Param("record") Account record, @Param("example") AccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account
     *
     * @mbggenerated Wed Jan 16 16:41:00 CST 2019
     */
    int updateByExample(@Param("record") Account record, @Param("example") AccountExample example);

    List<Account> selectByCondition(Account account);

    Account selectMapById(Long Id);

    Account selectTypeById(Long Id);

    Account selectByCustomerId(Long Id);

    List<Account> selectAllByCustomerId(Long Id);
}